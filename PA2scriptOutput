#Examples for Assignment 2: Matrix Inversion
> setwd("~/Documents/coursera/R course/ProgrammingAssignment2")
> source("cacheMatrix.R")
> #correct matrix, new usage
> newM1 = matrix(c(1,2,3,4),2,2)
> newM1
     [,1] [,2]
[1,]    1    3
[2,]    2    4
> x = makeCacheMatrix(newM1)
> a1 = cacheSolve(x)
> a1
     [,1] [,2]
[1,]   -2  1.5
[2,]    1 -0.5
> # second correct matrix, first inverse
> newM2 = matrix(c(1,3,2,4),2,2)
> newM2
     [,1] [,2]
[1,]    1    2
[2,]    3    4
> y = makeCacheMatrix(newM2)
> a2 = cacheSolve(y)
> a2
     [,1] [,2]
[1,] -2.0  1.0
[2,]  1.5 -0.5
> # checking results
> zz = newM1 * a1 #simple multiplication
> zz
     [,1] [,2]
[1,]   -2  4.5
[2,]    2 -2.0
> newM2 %*% a2 #proper Matrix multiplication
     [,1]         [,2]
[1,]    1 1.110223e-16
[2,]    0 1.000000e+00
> ### this results in the identity matrix
> # repeat invocation on a cachematrix already inverted...
> a11 = cacheSolve(x)
getting cached data
> a11
     [,1] [,2]
[1,] -2.0  1.0
[2,]  1.5 -0.5
> #message produced stating used cache for the inverse
> ##################
> # Failure examples
> ##################
> # simply try cacheSolve on a matrix
> newM3 = matrix(c(1,3,2,4),2,2)
> a3 = cacheSolve(newM3)
Error in x$getInverse : $ operator is invalid for atomic vectors
> # matrix is NOT n x n
> newM4 = matrix(c(1,4,2,5,3,6),2,3)
> z = makeCacheMatrix(newM4)
> a4 = cacheSolve(z)
 Show Traceback
 
 Rerun with Debug
 Error in solve.default(data, ...) : 'a' (2 x 3) must be square 
> 